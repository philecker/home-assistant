blueprint:
  name: Person Detected - Camera Notification + LLM Vision Remember
  description: >
    Sends a snapshot notification when motion is detected. 
    Includes a timestamped image, link to the live feed,
    and remembers the snapshot in LLM Vision — only when a person is detected.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
    person_sensor:
      name: Person Detection Sensor (e.g. Frigate)
      selector:
        entity:
          domain: binary_sensor
    camera:
      name: Camera
      selector:
        entity:
          domain: camera
    camera_name:
      name: Camera Name
      selector:
        text:

trigger:
  - platform: state
    entity_id: !input motion_sensor
    to: "on"

variables:
  camera_entity: !input camera
  person_entity: !input person_sensor
  label: !input camera_name
  safe_label: "{{ label | lower | replace(' ', '_') | regex_replace('[^a-z0-9_]', '') }}"
  timestamp: "{{ now().strftime('%Y%m%d_%H%M%S') }}"
  snapshot_filename: "/config/www/snapshots/{{ safe_label }}/snapshot_{{ safe_label }}_{{ timestamp }}.jpg"
  snapshot_url: "/local/snapshots/{{ safe_label }}/snapshot_{{ safe_label }}_{{ timestamp }}.jpg"

condition: []

action:
  # 1️⃣ Ensure snapshot directory exists
  - service: shell_command.create_snapshot_dir
    data:
      dir: "/config/www/snapshots/{{ safe_label }}"

  # 2️⃣ Take a snapshot
  - service: camera.snapshot
    data:
      filename: "{{ snapshot_filename }}"
    target:
      entity_id: !input camera

  # 3️⃣ Wait briefly to ensure file is saved
  - delay: "00:00:02"

  # 4️⃣ If a person was detected, send the snapshot to LLM Vision
  - if:
      - condition: state
        entity_id: !input person_sensor
        state: "on"
    then:
      - service: llm_vision.remember
        data:
          prompt: "Person detected by the {{ label }} camera."
          image_file: "{{ snapshot_filename }}"
          tags:
            - "{{ label }}"
            - "person"
            - "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          metadata:
            camera: "{{ camera_entity }}"
            snapshot_url: "{{ snapshot_url }}"
            motion_entity: "{{ motion_sensor }}"
            detection_entity: "{{ person_entity }}"

  # 5️⃣ Send a notification if camera notifications are enabled
  - if:
      - condition: state
        entity_id: input_boolean.camera_notifications
        state: "on"
    then:
      - service: notify.all_devices
        data:
          message: "Person Detected - {{ label | title }}"
          data:
            image: "{{ snapshot_url }}"
            actions:
              - action: "URI"
                title: "View Live"
                uri: "homeassistant://entity/{{ camera_entity }}"

mode: single
